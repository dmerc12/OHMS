# Generated by Django 5.1 on 2024-10-16 21:18

import asset.models
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(255)])),
                ('description', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('notes', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
            ],
        ),
        migrations.CreateModel(
            name='AssetInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=100)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('rental_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('last_maintenance', models.DateField(default=asset.models.AssetInstance.default_last_maintenance)),
                ('next_maintenance', models.DateField(default=asset.models.AssetInstance.default_next_maintenance)),
                ('usage', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('location', models.CharField(blank=True, max_length=500, null=True)),
                ('condition', models.CharField(choices=[('Good', 'Good'), ('Maintenance Scheduled', 'Maintenance Scheduled'), ('Maintenance Soon', 'Maintenance Soon'), ('Needs Maintenance', 'Needs Maintenance'), ('Out of Service', 'Out Of Service')], default='Good', max_length=21, validators=[django.core.validators.MaxLengthValidator(17)])),
                ('notes', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='asset.asset')),
            ],
        ),
        migrations.CreateModel(
            name='AssetMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=asset.models.AssetInstance.default_last_maintenance)),
                ('next_maintenance', models.DateField(default=asset.models.AssetInstance.default_next_maintenance)),
                ('current_usage', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('condition', models.CharField(choices=[('Good', 'Good'), ('Maintenance Scheduled', 'Maintenance Scheduled'), ('Maintenance Soon', 'Maintenance Soon'), ('Needs Maintenance', 'Needs Maintenance'), ('Out of Service', 'Out Of Service')], default='Good', max_length=21, validators=[django.core.validators.MaxLengthValidator(17)])),
                ('notes', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='asset.assetinstance')),
            ],
        ),
        migrations.AddConstraint(
            model_name='assetinstance',
            constraint=models.UniqueConstraint(fields=('asset', 'serial_number'), name='unique_assetinstance_serial_number'),
        ),
    ]
